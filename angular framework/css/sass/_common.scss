@import "vars";
@import "utils";

@import "reset";


// Class for extend
@mixin has-layout{
	*zoom:1;
}

@mixin clearfix{
	@include has-layout;
	//clear:both;
	//&:before,
	//&:after{content:"\0020";display: block;font-size:0;height:0;overflow:hidden;}

	&:after{clear:both;content:"";display:table;}
}

@mixin opacity($value){
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+($value*100)+")";
  filter: alpha(opacity=$value*100);
  -moz-opacity: $value;
  -khtml-opacity: $value;
  opacity: $value;
}

@mixin equal-height($paddingBottom:0px){
	overflow:hidden;position:relative;
	&>*{padding-bottom:5000px+$paddingBottom !important;margin-bottom:-5000px !important;}
}

@mixin swap-img($invert:false) {
	cursor: pointer;
	display: block;
	background-repeat: no-repeat;
	@if $invert == false {
		background-position:left top;
	} @else {
		background-position:left bottom;
	} 
	&:hover,&.hover, &.active,
	&:hover span{
		@if $invert == false {
			background-position:left bottom;
		} @else {
			background-position:left top;
		}
	};
}




//CSS2
@mixin arrow($dir:top,$width:5px,$height:5px,$color:#FFF){
	//Default Top
	$opposite:bottom;
	$edges:left right;
	
	@if $dir == bottom{
		$opposite:top;
		$edges:left right;
	} @else if $dir == left{
		$opposite:right;
		$edges:top bottom;
		$temp:$width;
		$width:$height;
		$height:$temp;
	} @else if $dir == right{
		$opposite:left;
		$edges:top bottom;
		$temp:$width;
		$width:$height;
		$height:$temp;
	}

	border-#{$opposite}:$width solid $color;

	@each $edge in $edges{
		border-#{$edge}:$height solid transparent;
	}

	width:0px;
	height:0px;
	display:block;
}


@mixin loading{
	.loading{overflow:hidden;background-image:url($ajax-loader-gif);background-repeat:no-repeat;background-position: center center;
		&>*{visibility:hidden;opacity:0;filter:alpha(opacity=0);}
	}
}

.clearfix{@include clearfix;}





